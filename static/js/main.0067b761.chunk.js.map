{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","constants.js","actions.js","containers/App.js","reducers.js","index.js"],"names":["Card","name","email","id","className","src","alt","CardList","data","map","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","children","ErrorBoundry","state","hasError","this","setState","Component","CHANGE_SEARCH_FIELD","FETCH_KITTIES_PENDING","FETCH_KITTIES_SUCCESS","FETCH_KITTIES_fAILED","fetchKitties","dispatch","a","fetch","response","json","payload","connect","searchField","searchKitties","kitties","isPending","error","onSearchChange","event","text","target","value","onFetchKitties","useEffect","filteredKitties","filter","kitty","toLowerCase","includes","href","searchInitialState","kittiesInitialState","logger","createLogger","rootReduce","combineReducers","action","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0067b761.chunk.js","sourcesContent":["import React from 'react'\n\nconst Card = ({ name, email, id }) => {\n  return (\n    <div className=\"p-5 rounded-lg shadow-lg transition-transform hover:scale-110 bg-gray-800 text-gray-400\">\n      <img\n        src={`https://robohash.org/${id}?set=set4&size=200x200`}\n        alt=\"kitty\"\n      />\n      <div className=\"flex flex-col items-center\">\n        <h2 className=\"pt-2 font-bold text-xl\">{name}</h2>\n        <p>{email}</p>\n      </div>\n    </div>\n  )\n}\n\nexport default Card\n","import React from 'react'\nimport Card from './Card'\n\nconst CardList = ({ data }) => {\n  return (\n    <div className=\"grid grid-cols-4 justify-center gap-4\">\n      {data.map(({ id, name, email }) => {\n        return <Card id={id} name={name} email={email} key={id} />\n      })}\n    </div>\n  )\n}\n\nexport default CardList\n","import React from 'react'\n\nconst SearchBox = ({ searchChange }) => {\n  return (\n    <>\n      <input\n        className=\"inline-flex p-3 rounded-lg text-gray-300 border-2 border-gray-800 w-1/3 focus:outline-none focus:ring focus:border-gray-800 bg-gray-700\"\n        type=\"search\"\n        placeholder=\"Search for a kitty...\"\n        onChange={searchChange}\n      />\n    </>\n  )\n}\n\nexport default SearchBox\n","import React from 'react'\n\nconst Scroll = (props) => {\n  return <div>{props.children}</div>\n}\n\nexport default Scroll\n","import React, { Component } from 'react'\n\nclass ErrorBoundry extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      hasError: false\n    }\n  }\n\n  // This is like `try catch`\n  componentDidCatch() {\n    this.setState({ hasError: true })\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <h1>Oops. That is not good :(</h1>\n    } else {\n      return this.props.children\n    }\n  }\n}\n\nexport default ErrorBoundry\n","export const CHANGE_SEARCH_FIELD = 'CHANGE_SEARCH_FIELD'\n\nexport const FETCH_KITTIES_PENDING = 'FETCH_KITTIES_PENDING'\nexport const FETCH_KITTIES_SUCCESS = 'FETCH_KITTIES_SUCCESS'\nexport const FETCH_KITTIES_fAILED = 'FETCH_KITTIES_fAILED'\n","import {\n  CHANGE_SEARCH_FIELD,\n  FETCH_KITTIES_PENDING,\n  FETCH_KITTIES_SUCCESS,\n  FETCH_KITTIES_fAILED\n} from './constants'\n\nexport const setSearchField = (text) => ({\n  type: CHANGE_SEARCH_FIELD,\n  payload: text\n})\n\nexport const fetchKitties = async (dispatch) => {\n  dispatch({ type: FETCH_KITTIES_PENDING })\n  try {\n    const response = await fetch('https://jsonplaceholder.typicode.com/users')\n    const data = await response.json()\n    dispatch({ type: FETCH_KITTIES_SUCCESS, payload: data })\n  } catch (e) {\n    dispatch({ type: FETCH_KITTIES_fAILED, payload: e })\n  }\n}\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport CardList from '../components/CardList'\nimport SearchBox from '../components/SearchBox'\nimport Scroll from '../components/Scroll'\nimport ErrorBoundry from '../components/ErrorBoundry'\n\nimport { setSearchField, fetchKitties } from '../actions'\n\n// Set state mapper to map out the state into the props\nconst mapStateToProps = (state) => {\n  return {\n    searchField: state.searchKitties.searchField,\n    kitties: state.fetchKitties.kitties,\n    isPending: state.fetchKitties.isPending,\n    error: state.fetchKitties.error\n  }\n}\n\n// Set dispatch actions to change state\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onSearchChange: (event) => dispatch(setSearchField(event.target.value)),\n    onFetchKitties: () => dispatch(fetchKitties)\n  }\n}\n\nconst App = (props) => {\n  const { searchField, onSearchChange, kitties, isPending, onFetchKitties } =\n    props\n\n  // Mounted life cycle\n  useEffect(() => {\n    onFetchKitties()\n  }, [onFetchKitties])\n\n  const filteredKitties = kitties.filter((kitty) => {\n    return kitty.name.toLowerCase().includes(searchField.toLowerCase())\n  })\n\n  return (\n    <>\n      <div className=\"max-w-4xl lg:max-w-6xl mx-auto pb-12\">\n        <div className=\"flex flex-col justify-center items-center my-6\">\n          {isPending ? (\n            <h1 className=\"main-title text-5xl text-gray-100\">Loading...</h1>\n          ) : (\n            <>\n              <h1 className=\"main-title text-5xl text-gray-100 mb-8 mt-6\">\n                Kitty Friends\n              </h1>\n              <SearchBox searchChange={onSearchChange} />\n            </>\n          )}\n        </div>\n        <Scroll>\n          <ErrorBoundry>\n            <CardList data={filteredKitties} />\n          </ErrorBoundry>\n        </Scroll>\n        <div className=\"flex flex-col items-center mt-10 text-gray-400 text-lg\">\n          <p>\n            Made with ðŸ’Ž by\n            <a href=\"https://github.com/TriDiamond\"> Tridiamond</a>\n          </p>\n          <p>Build with React + Redux</p>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n","import {\n  CHANGE_SEARCH_FIELD,\n  FETCH_KITTIES_PENDING,\n  FETCH_KITTIES_SUCCESS,\n  FETCH_KITTIES_fAILED\n} from './constants'\n\nconst searchInitialState = {\n  searchField: ''\n}\n\nconst kittiesInitialState = {\n  isPending: false,\n  kitties: [],\n  error: ''\n}\n\nexport const searchKitties = (state = searchInitialState, action = {}) => {\n  switch (action.type) {\n    case CHANGE_SEARCH_FIELD:\n      return { ...state, searchField: action.payload }\n    default:\n      return state\n  }\n}\n\nexport const fetchKitties = (state = kittiesInitialState, action = {}) => {\n  switch (action.type) {\n    case FETCH_KITTIES_PENDING:\n      return { ...state, isPending: true }\n    case FETCH_KITTIES_SUCCESS:\n      return { ...state, kitties: action.payload, isPending: false }\n    case FETCH_KITTIES_fAILED:\n      return { ...state, isPending: false, error: action.payload }\n    default:\n      return state\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware, combineReducers } from 'redux'\nimport { createLogger } from 'redux-logger'\nimport thunkMiddleware from 'redux-thunk'\nimport './index.css'\nimport App from './containers/App'\n\nimport { searchKitties, fetchKitties } from './reducers'\n\n// Redux logger middleware\n// --> Monitor your Redux states, actions, dipatches\nconst logger = createLogger()\n\nconst rootReduce = combineReducers({ searchKitties, fetchKitties })\nconst store = createStore(rootReduce, applyMiddleware(thunkMiddleware, logger))\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals()\n"],"sourceRoot":""}